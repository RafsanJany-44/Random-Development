@{
    ViewBag.Title = "TextChat";
    //Layout = "~/Views/Shared/_PLHomeLayout.cshtml";
    //ZH: 201806 - Layout set to null to accommodate make this view partial view and use it in split left-right layout on master templates
    Layout = null;//"~/Views/Shared/_EventSiteGeneralLayout.cshtml";
}

<!--div class="container" test="@HttpContext.Current.Request.Url.Host;"-->
<div id="accordion" style="width: 100%; display:none;">
    @*<h3>Contacts</h3>*@
    <h3>@PL_T("AV.TextChat.TextChat.Accordion.Contacts.Title", "Contacts")</h3>
    <!--div class="user-list-container"-->
    <!--div class="online-users-header">Users Online</div-->
    <div class="online-users" style="padding-left:3px;padding-top:0px;padding-right:0px">
        <img src="/Content/images/text-chat-loader.gif" id="online-user-loader" style="" />
    </div>
    <!--/div-->
    <!--EH 180816   Note: Order change of accordion div may cause behavioural issue-->
    @*<h3>Contacts</h3>
        <div class="contact-users-wrapper">
            <img src= "/Content/images/text-chat-loader.gif" id="contact-users-loader" style="display: none;"/>
            <div class="contact-users">

            </div>
        </div>*@

    @*<h3>Contact History</h3>
        <div class="contact-history">

        </div>*@
    @*<h3 class="chat-box">Chat</h3>*@
    <h3 class="chat-box">@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat")</h3>
    <div class="message-container">
        @*MRR 180820 added a wrapper div for chat history + chat box *@
        <img src="/Content/images/text-chat-loader.gif" id="message-area-loader" style="display: none;" />
        <div class="message-area">
        </div>
        @*<h3 class="chat-box">Chat Box</h3>*@ @*MRR 180820 commented to merge chat history & chat box accordion *@
        <div class="text-chat-controls">
            <input type="text" id="message" />
            @*<input type="button" id="sendmessage" class="btn btn-success" value="Send" />*@
            <input type="button" id="sendmessage" class="btn btn-success" value=@PL_T("S.Button.Send", "Send") />
            <input type="hidden" id="displayname" />
            <input type="hidden" id="frndBpId" />
            <input type="hidden" id="offline_contact_to" />
            <div class="chat-close-control">
                @*<button class="btn btn-primary btn-sm" onclick="onCloseBtn();">Close Chat</button>*@
                <button class="btn btn-primary btn-sm" onclick="onCloseBtn();">@PL_T("AV.TextChat.TextChat.Close.Button.Label", "Close Chat")</button>
            </div>
        </div>
    </div>
</div>
<!--
<div class="chatViewContainer">

    <div class="user-list-container">
        <div class="online-users-header">Users Online</div>
        <div class="online-users">

        </div>
    </div
    <div class="video-chat-container">

    </div>
    <div class="chat-close-control"><button class="btn btn-primary btn-sm" onclick="onCloseBtn();">Close</button></div>
    <div class="text-chat-container" style="display:none">
        <div class="message-area-header">

        </div>
        <div class="message-area">

        </div>
        <div class="text-chat-controls">
            <input type="text" id="message" />
            <input type="button" id="sendmessage" class="btn btn-success" value="Send" />
            <input type="hidden" id="displayname" />
            <input type="hidden" id="frndBpId" />
        </div>
        <ul id="discussion"></ul>
    </div>
</div>-->
<!--/div-->
@*@section scripts {*@
<!--Script references. -->
<!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
<!--Reference the SignalR library. -->
@* <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>*@
<!--Reference the autogenerated SignalR hub script. -->
@*<script src="http://localhost:58458/signalr/hubs"></script>*@

<script src="https://static.opentok.com/v2/js/opentok.min.js"></script>
<script src='https://meet.jit.si/external_api.js'></script>

<!--SignalR script to update the chat page and send messages.-->
<script>
        @*var theUserName = '@ViewBag.UserName';
        var theBpId = @ViewBag.BpId;
        var theBpName = '@ViewBag.BpName';*@

        var videocallResponse = '@ViewBag.videocall_response';
        var theApiKey = '@ViewBag.incoming_apikey';
        var theSessionId = '@ViewBag.incoming_sessionid';
        var theToken = '@ViewBag.incoming_token';
        var inConvMessage = '@PL_T("AV.TextChat.TextChat.Accordion.Conversation.Title", "In Conversation with {0}")';


        $(function () {
            onChatPage = true;
            // Reference the auto-generated proxy for the hub.
            chat = SJ.iwc.SignalR.getHubProxy('chatHub', { client: {} });//$.connection.chatHub;
            //ZH:20181024 - Added variable to support text localization inside JS events/functions
            var inConvMessage = '@PL_T("AV.TextChat.TextChat.Accordion.Conversation.Title", "In Conversation with {0}")';

            $("#accordion").show().ejAccordion({
                //EH 180616 load contact
                activate: function (args) {
                    // debugger;
                    var activeList = args.model.selectedItems;
                    var lastIndex = activeList.length - 1;

                    if (activeList[lastIndex] == 1) {
                        chat.server.seenUnread();
                    }
                },
                enableMultipleOpen: true,
                showRoundedCorner: true,
                selectedItems: [0, 1]
            });

            //$('.chat-box').html("<span class=\"e-icon e-plus\"></span>In Conversation with:");
            //20210219 RJ WY message disable functionality commented
           //$('#sendmessage').prop("disabled",true);
            //$('#message').prop("disabled", true);
            $('.chat-close-control').hide();

            //EH 181211 - sets up user interface to continue chat
            function initiateTextChat(senderBpId) {
                var userElem = $('.user[bp_id="' + senderBpId + '"]');
                // debugger;
                // console.log(userElem);
                //$('.text-chat-container').show("slide", { direction: 'left' }, "slow");
                //$('.message-area-header').html("In Conversation with " + userElem.text()); data-display-name
                //$('.chat-box').html("<span class=\"e-icon e-plus\"></span>Chat: In Conversation with " + userElem.text()); //MRR 180820 text changed from chat box to chat
                //EH 190313
               // $('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat"): " + inConvMessage.replace('{0}', userElem.text()));
                $('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat"): " + inConvMessage.replace('{0}', userElem.attr('data-display-name')));
                //$('.chat-close-control').show();
                // Clear text box and reset focus for next comment.
                $('#message').val('').focus();
                $('#frndBpId').val(userElem.attr('bp_id'));

                //EH 190318
                //onChatButtonClick(userElem);
                //$('.message-area').html("");

                $('#sendmessage').prop("disabled", false);
                $('#message').prop("disabled", false);
                debugger;
                //ZH: 20180816 - Added pop message flash
                //ZH: 20180831 - Changed - Flash only when chat pane is hidden. If not hidden, check if Chat Accordion is hidden
                if ($('.right-pane').hasClass('hidden')) {
                    debugger;
                    var imgElem = $('.online-icon').find('img');
                    imgElem.attr('src', '/Content/images/chat-online-flash.gif');
                }
                else {
                    var accrodion_obj = $("#accordion").ejAccordion('instance');

                    //ZH: chekcing if value 1 exisits in the selectedItems array. (Equivalent to indexOf())
                    if ($.inArray(1, accrodion_obj.model.selectedItems) == -1) {
                        var imgElem = $('.online-icon').find('img');
                        imgElem.attr('src', '/Content/images/chat-online-flash.gif');
                    }
                }
            }

            // Create a function that the hub can call back to display messages.
            chat.client.notifyMessage = function (name, message, senderBpId,user_id) {
                //Remove message from pending messages cache as it is displayed instantly
                //debugger;
                //var x = chat.client.getAllUsers();

                chat.server.clearPendingMessages(theBpId, senderBpId);
                //if (!$('.text-chat-container').is(":visible")) {
                //ZH: 20180815 - Added the condition check. Now self messages are also loaded via the hub call
                var tempSharedObj = JSON.parse(SJ.localStorage.getItem('PL_CHAT_' + theBpId));
                var last_frnd_bp_id = $('#frndBpId').val();
                var tmp_last_frnd = last_frnd_bp_id;
                if (tempSharedObj != null) {
                    last_frnd_bp_id = tempSharedObj.lastFrnd;
                }
                var last_offline_contact_bp_id = $('#offline_contact_to').val();
                // if (theBpId != senderBpId)

                if(theBpId != user_id){
                    last_frnd_bp_id = senderBpId + '';
                    //var userElem = $('.user[bp_id="' + senderBpId + '"]');
                    var userElem = $('#' + senderBpId);
                    //////start
                    //Eh 181211
                    if (tmp_last_frnd == '' && last_offline_contact_bp_id == '') {
                        if (userElem.length <= 0) {
                            chat.server.loadOnlineUser(senderBpId).done(function () {
                                //alert("Rahat vai");
                                //This will execute only once  between two new bp
                                setTimeout(function () {
                                    initiateTextChat(senderBpId);
                                }, 3000);

                            });

                        }
                        else {
                            initiateTextChat(senderBpId);
                        }
                    }

                    //////end
                    //EH 181211 relocated above
                    @*//$('.text-chat-container').show("slide", { direction: 'left' }, "slow");
                    //$('.message-area-header').html("In Conversation with " + userElem.text());
                    //$('.chat-box').html("<span class=\"e-icon e-plus\"></span>Chat: In Conversation with " + userElem.text()); //MRR 180820 text changed from chat box to chat
                    $('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat"): " + inConvMessage.replace('{0}', userElem.text()));
                    //$('.chat-close-control').show();
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                    $('#frndBpId').val(userElem.attr('bp_id'));

                    $('#sendmessage').prop("disabled", false);
                    $('#message').prop("disabled", false);

                    //ZH: 20180816 - Added pop message falsh
                    //ZH: 20180831 - Changed - Flash only when chat pane is hidden. If not hidden, check if Chat Accordion is hidden
                    if ($('.right-pane').hasClass('hidden')) {
                        var imgElem = $('.online-icon').find('img');
                        imgElem.attr('src', '/Content/images/chat-online-flash.gif');
                    }
                    else{
                        var accrodion_obj = $("#accordion").ejAccordion('instance');

                        //ZH: chekcing if value 1 exisits in the selectedItems array. (Equivalent to indexOf())
                        if ($.inArray(1, accrodion_obj.model.selectedItems) == -1) {
                            var imgElem = $('.online-icon').find('img');
                            imgElem.attr('src', '/Content/images/chat-online-flash.gif');
                        }
                    }*@
                }
                //}

                //EH  190313
                // $('.message-area').append(addNewTextMessageElement(name, message));

                //if (tmp_last_frnd == '' || tmp_last_frnd == senderBpId || last_offline_contact_bp_id == '')
               // if (tmp_last_frnd == senderBpId && || last_offline_contact_bp_id == senderBpId || (tmp_last_frnd == '' && last_offline_contact_bp_id == ''))
                //20210430 RJ added (user_id!=theBpId)
                if ((tmp_last_frnd == senderBpId && user_id!=theBpId) || last_offline_contact_bp_id == senderBpId || (tmp_last_frnd == '' && last_offline_contact_bp_id == '')) {

                    $('.message-area').append(generate_msg_html(name, message, 'received'));



                    //ZH: 20180815 - Adding the current message html portion in the localstorage for tab sharing
                    var sharedObject = { 'lastFrnd': last_frnd_bp_id, 'last_history': $('.message-area').html() };
                    //SJ.localStorage.setItem('PL_CHAT_' + theBpId, $('.message-area').html());
                    SJ.localStorage.setItem('PL_CHAT_' + theBpId, JSON.stringify(sharedObject));


                    //Scroll To Bottom:
                    scrollTBottom($('.message-area'));
                    showmsgnotification(senderBpId);
                }
                else {

                    var userElem = $('.user[bp_id="' + senderBpId + '"]');
                    if (userElem.length <= 0) {
                        chat.server.loadOnlineUser(senderBpId).done(function () {
                            //alert("Rahat vai");
                            //This will execute only once  between two new bp
                            setTimeout(function () {
                                showmsgnotification(senderBpId);
                            }, 3000);

                        });

                    }
                    else {
                        showmsgnotification(senderBpId);
                    }

                }

                ////ZH: 20180815 - Adding the current message html portion in the localstorage for tab sharing
                //var sharedObject = { 'lastFrnd': last_frnd_bp_id, 'last_history': $('.message-area').html() };
                ////SJ.localStorage.setItem('PL_CHAT_' + theBpId, $('.message-area').html());
                //SJ.localStorage.setItem('PL_CHAT_' + theBpId, JSON.stringify(sharedObject));


                ////Scroll To Bottom:
                //scrollTBottom($('.message-area'));
            };

            //Getting all userlist the first time connected. Pushing this from server
            //$('#online-user-loader').show();
            //20210511 RJ global variable added to get all contact
            var AllUserList = '';
            chat.client.getAllUsers = function (userList) {
                $('#online-user-loader').hide();
                $('#displayname').val(theBpName);
                //20210511 RJ get all contact
                window.AllUserList = userList;
                //ZH 20180814 - Added new div element to support changes for IWC. (getAllUsers now gets call on every tab open & broadcasted)
                var userDivs = document.createElement("table");
                //userDivs.id = "userOnline";
                //MAR 20210226 - userOnline changed to userTable and add
                userDivs.id = "userTable";
                var userTableStyle = document.createAttribute("style");
                userTableStyle.value = "width : 100%";
                userDivs.setAttributeNode(userTableStyle);
                for (var key in userList) {
                    //console.log("Connection Id: " + key);
                    //console.log("User Name: " + userList[key].userName);
                    //console.log("Bp Id: " + userList[key].bpid);
                    //console.log("My BP Name: " + theBpName);

                    if (userList[key].bpId != theBpId) {
                        //$('.online-users').append(addNewUserElement(key, userList[key].userName, userList[key].bpid, userList[key].displayName ));

                        //ZH 20180814 - Added new div element to support changes for IWC.
                        //Commented out below line and added the line after
                        //$('.online-users').append(addNewUserElement(userList[key].userName, userList[key].bpId, userList[key].displayName));


                        var userTableRow = document.createElement("tr");
                        var userTableData = document.createElement("td");
                        //userDivs.appendChild(addNewUserElement(userList[key].userName, userList[key].bpId, userList[key].displayName));
                        //userTableData.appendChild(addNewUserElement(userList[key].userName, userList[key].bpId, userList[key].displayName, userList[key].contactStatus));
                        var userData = addNewUserElement(userList[key].userName, userList[key].bpId,"","CHAT", userList[key].displayName, userList[key].contactStatus);
                        userTableData.appendChild(userData);
                        console.log(userTableData);
                        userTableRow.appendChild(userTableData);
                        userDivs.appendChild(userTableRow);
                    }

                }

                //debugger;

                    //ZH 20180814 - Added new div element to support changes for IWC.
                //Adding the user list divs here.
                var menuDiv = OnlineUserMenuDiv();
               // $('.online-users').html(menuDiv.outerHTML + userDivs.innerHTML);
                //$('.online-users').html(menuDiv.outerHTML + userDivs.outerHTML);
                var onlineUsersClass = document.getElementsByClassName("online-users");
                //console.log(onlineUsersClass[0]);
                onlineUsersClass[0].prepend(userDivs);
                onlineUsersClass[0].prepend(menuDiv);

                showOnlineUser('all', $("#menulinkall"));

                //EH 180830 sorting online user
                //MAR 20210224 Commented sortChilds as userDiv is converted to table structure
                //sortChilds('#userOnline', '.user');

                //ZH: 20180815 - Adding the current chat history from localstorage
                var tempSharedObj = JSON.parse(SJ.localStorage.getItem('PL_CHAT_' + theBpId));
                var current_chat_data = '';
                if (tempSharedObj != null) {
                    current_chat_data = tempSharedObj.last_history;

                    if (tempSharedObj.lastFrnd != '') {
                        var userElem = $('.user[bp_id=' + tempSharedObj.lastFrnd + ']');


                        //$('.text-chat-container').show("slide", { direction: 'left' }, "slow");
                        //$('.message-area-header').html("In Conversation with " + userElem.text());
                        //$('.chat-box').html("<span class=\"e-icon e-plus\"></span>Chat: In Conversation with " + userElem.text());  //MRR 180820 text changed from chat box to chat
                        $('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat"): " + inConvMessage.replace('{0}', userElem.text()));
                        //$('.chat-close-control').show();
                        // Clear text box and reset focus for next comment.
                        $('#message').val('').focus();
                        $('#frndBpId').val(userElem.attr('bp_id'));
                        $('#sendmessage').prop("disabled", false);
                        $('#message').prop("disabled", false);
                    }
                }
                //$('.message-area').html(SJ.localStorage.getItem('PL_CHAT_' + theBpId));
                $('.message-area').html(current_chat_data);

                $('.user').unbind("mouseenter");
                $('.user').bind("mouseenter", function () {
                    $('.chatbutton').show();
                    //console.log($(this));
                    if (!$(this).hasClass("contact-offline")) {
                        $(this).find('.chatbutton').show();
                    }

                });

                $('.user').unbind("mouseleave");
                $('.user').bind("mouseleave", function () {
                    $(this).find('.chatbutton').hide();
                });

                //ZH: 20180820 - Commented chatbutton click added user click
                /*$('.chatbutton').unbind("click");
                $('.chatbutton').bind("click", function () {
                    onChatButtonClick($(this));
                });*/


                //MAR 20210223 Commented user bind and unbind for onClick attribute
                //$('.user').unbind("click");
      //         $('.chatbutton,.data-display-name').bind("click", function () {
      //              onChatButtonClick($(this));
     //           });



                /*$('.videobtn').bind("click", function () {
                    onChatButtonClick($(this));
                });*/





                chat.server.getPendingMessages(theBpId).done(function (pendingMessages) {
                    //debugger;
                    //console.log("IN Pending...");
                    if (pendingMessages) {

                        //console.log(pendingMessages);
                        var theUserElement;
                        for (var senderBpId in pendingMessages) {
                            if (pendingMessages.hasOwnProperty(senderBpId)) {
                                //console.log(senderBpId);
                                theUserElement = $('.user[bp_id="' + senderBpId + '"]');
                                //console.log("Pending Message Section");
                                //console.log(theUserElement);

                                var textMessages = pendingMessages[senderBpId].split("||");

                                for (var i = 0; i < textMessages.length; i++) {
                                    $('.message-area').append(generate_msg_html(theUserElement.text(), textMessages[i], 'received'));
                                }
                                //Removing the displayed pending messages
                                chat.server.clearPendingMessages(theBpId, senderBpId);
                            }
                        }

                        //$('.text-chat-container').show();
                        //$('.message-area-header').html("In Conversation with " + theUserElement.text());
                        //$('.chat-box').html("<span class=\"e-icon e-plus\"></span>Chat: In Conversation with " + theUserElement.text());  //MRR 180820 text changed from chat box to chat
                        $('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat"): " + inConvMessage.replace('{0}', userElem.text()));

                        //Expaning the Chat History Accordion
                        $("#accordion").ejAccordion("expandPanel", [1]);

                        // Clear text box and reset focus for next comment.
                        $('#message').val('').focus();
                        $('.chat-close-control').show();
                        $('#frndBpId').val(theUserElement.attr('bp_id'));
                        $('#sendmessage').prop("disabled", false);
                        $('#message').prop("disabled", false);
                    }
                });
            };

            //20210318 RJ Getting all group list for the first time connected
            chat.client.getAllGroups = function (groupList) {
                var temp_org_id = "@ViewBag.orgId";
                getGroupNames(temp_org_id, null, groupList);
            };




            chat.client.updateOfflineUsers = function (offlineUsers) {
                //console.log("Updating Offline Users....");
                //console.log(offlineUsers);
                //debugger;
                //If the array is not null and lenght is not 0, removing the bp_id in the array from the view
                if (offlineUsers != null) {

                    if (offlineUsers.length > 0) {

                        for (var index = 0; index < offlineUsers.length; index++) {

                            //$('.user[bp_id="' + offlineUsers[index] + '"]').remove();
                            //EH 180830
                            if ($('.user[bp_id="' + offlineUsers[index] + '"]').hasClass("contact-online")) {
                                $('.user[bp_id="' + offlineUsers[index] + '"]').removeClass("contact-online");
                                $('.user[bp_id="' + offlineUsers[index] + '"]').addClass("contact-offline");
                            }
                            else
                                if ($('.user[bp_id="' + offlineUsers[index] + '"]').hasClass("online")) {
                                    $('.user[bp_id="' + offlineUsers[index] + '"]').remove();
                                }
                        }

                        //ZH: 20180820 - Added
                        if ($('.user').length == 0) {
                            //$('.message-area').html("");
                            //$('.text-chat-container').hide("slide", { direction: 'left' }, "slow");
                            //$('.chat-box').html("<span class=\"e-icon e-plus\"></span>Chat");
                            $('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat")");
                            //Expaning the Users Accordion
                            //$("#accordion").ejAccordion("expandPanel", [0]);

                            //Collapsning the Chat Box & Chat History Accordion
                            //$("#accordion").ejAccordion("collapsePanel", [3, 4]);
                            $('#frndBpId').val('');
                            //20210219 RJ WY offline chat option anable
                           // $('#sendmessage').prop("disabled",true);
                           // $('#message').prop("disabled", true);
                        }
                    }
                }
            };

            //Getting the new user details when he/she gets connected. Pushing this from server
            //useless function
            chat.client.getNewUser = function (username, bpid, displayname) {
                //debugger;
                if (bpid != theBpId) {
                    //MAR 20210430 restructuring with the new class names
                    var check = $('#'+bpid).length;

                    //if (!$('.user[bp_id="' + bpid + '"]').length) {
                    if (!check) {
                        //console.log("SINGLE USER-------------------");
                        //console.log("Connection Id: " + connid);
                        //console.log("User Name: " + username);
                        //console.log("Bp Id: " + bpid);
                        //console.log("SINGLE USER END-------------------");

                        //$('.online-users').append(addNewUserElement(username, bpid, displayname, "online"));
                        $('#userTable').append(addNewUserElement(username, bpid, "", "CHAT", displayname, "contact-online"));

                        //$('.user').bind("click", function(){
                        //onUserClick($(this));
                        //});

                        $('.user').unbind("mouseenter");
                        $('.user').bind("mouseenter", function () {
                            $(this).find('.chatbutton').show();
                        });

                        $('.user').unbind("mouseleave");
                        $('.user').bind("mouseleave", function () {
                            $(this).find('.chatbutton').hide();
                        });

                        //ZH: 20180820 - Commented chatbutton click added user click
                        /*$('.chatbutton').unbind("click");
                        $('.chatbutton').bind("click", function () {
                            onChatButtonClick($(this));
                        });*/

                        //$('.user').unbind("click");
                        //$('.user').bind("click", function () {
      //                  $('.chatButton').bind("click", function () {
       //                     onChatButtonClick($(this));
      //                  });
                    }
                    else {
                        //if ($('.user[bp_id="' + bpid + '"] i').hasClass("glyphicons-address-book")) {
                            //$('.user[bp_id="' + bpid + '"]').removeClass("contact-offline");
                            //$(".user").parent().attr("bp_id")
                            //$('.user[bp_id="' + bpid + '"]').addClass("contact-online");
                        $('#'+bpid).removeClass("contact-offline");
                        $('#'+bpid).addClass("contact-online");
                        //}
                        //$('.user[bp_id=482274] i').hasClass("glyphicons-address-book")
                    }
                    //EH 180831 sorting after adding new user
                    //sortChilds('#userTable', '.user');
                }
            };

            //Removing the user going offline. Pushing this from server
            chat.client.removeUser = function (connid) {
                //console.log("DELETE USER-------------------");
                //console.log("Del Conn Id: " + connid);
                //console.log("DELETE USER END-------------------");

                //$('.user[connId="'+ connid +'"]').remove();

            };

            //ZH: 20180817 - Added function to stop chat icon flash
            chat.client.stopIconFlash = function () {
                var imgElem = $('.online-icon').find('img');
                if (typeof imgElem != 'undefined' && imgElem != null) {
                    imgElem.attr('src', '/Content/images/chat-online.png');
                }
            };

            // Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            $('#displayname').val(theBpName);

            // Set initial focus to message input box.
            $('#message').focus();

            if (videocallResponse == '1') {
                //console.log("Video Reponse is True");
                //console.log("Incoming API: " + theApiKey);
                //console.log("Incoming Session ID: " + theSessionId);
                //Getting the video chat module
                //$.post("/Chat/ChatSession", { apikey: theApiKey, sessionid: theSessionId, token: theToken },
                //    function (data, status) {
                //        if (status == "success") {
                //            //console.log(data);
                //            $('.text-chat-container').hide();
                //            $('.video-chat-container').html(data);
                //            $('.video-chat-container').show();
                //        }
                //    });

                //For IE crossDomain must be set to true;
                $.ajax({
                    url: "/chatSession/getvideochat",
                    type: "POST",
                    data: { apikey: theApiKey, sessionid: theSessionId, token: theToken },
                    crossDomain: true,
                    success: function (data) {
                        $('.text-chat-container').hide();
                        $('.video-chat-container').html("");
                        $('.video-chat-container').html(data);
                        $('.video-chat-container').show();
                        $('.chat-close-control').show();
                    }
                });
            }

            //Set some basic query string to push to the server with the connection
            //$.connection.hub.qs = { 'username': theUserName, 'bp_id' : theBpId, 'displayname' : theBpName };

            // Start the connection.
            /*$.connection.hub.start().done(function () {
                //console.log("Connection Id: " + $.connection.hub.id);
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    //chat.server.sendMessage($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });*/

            $('#sendmessage').click(function () {
                var toBpId = $(this).parent().find('#frndBpId').val();
                var dc_class = $("tr[dc_id='" + toBpId + "']").attr('dc_class');
                var temp_org_id = "@ViewBag.orgId";
                var user_name=$('#displayname').val();
                var message = $("#message").val();
                if(dc_class == "PUBLIC_GROUP" || dc_class == "PRIVATE_GROUP")
                {


 					 if (message != "") {

                        if (toBpId != '') {
                            // Call the Send method on the hub.
                            //chat.server.sendMessage($('#displayname').val(), $('#message').val(), toConnId, theBpId, toBpId);
                            //chat.server.sendMessage($('#displayname').val(), $('#message').val(), theBpId, toBpId);
                            chat.server.sendMessage(temp_org_id,user_name ,toBpId, message, toBpId, theBpId,null);
                            GroupChatSaveDB(temp_org_id, toBpId, message, toBpId, theBpId);

                            $('.message-area').append(generate_msg_html($('#displayname').val(), $('#message').val(), 'sent'));
                            //SJ.localStorage.setItem('PL_CHAT_' + theBpId, $('#message').val());

                            //Scroll to bottom
                            scrollTBottom($('.message-area'));

                            // Clear text box and reset focus for next comment.
                            $('#message').val('').focus();
                        }
                    }
                }
                else
                {
                    var message = $("#message").val();
                    console.log("Single Chat!");
                    if (message != "") {


                        if (toBpId != '') {
                            // Call the Send method on the hub.
                            //chat.server.sendMessage($('#displayname').val(), $('#message').val(), toConnId, theBpId, toBpId);
                            //  chat.server.sendMessage($('#displayname').val(), $('#message').val(), theBpId, toBpId);
                            chat.server.sendMessage(temp_org_id,user_name, 1,message , toBpId,theBpId,null);



                            $('.message-area').append(generate_msg_html($('#displayname').val(), $('#message').val(), 'sent'));
                            //SJ.localStorage.setItem('PL_CHAT_' + theBpId, $('#message').val());

                            //Scroll to bottom
                            scrollTBottom($('.message-area'));

                            // Clear text box and reset focus for next comment.
                            $('#message').val('').focus();
                        }
                    }
                }

                //To-Do Group Message Send
                //MRR 180820 added in order to prevent to send blank message

            });

            function onUserClick(element) {
                $('.text-chat-container').css('display', 'block');
                //$('.message-area-header').html("In Conversation with " + element.html());
                $('#frndBpId').val(element.attr('bp_id'));
                $('#sendmessage').prop("disabled", false);
                $('#message').prop("disabled", false);
            }

            function onChatButtonClick(element) {
                //if (count <= 0) {
                //console.log("Button Clicked...");
                //If the clicked button is text chat button

                //ZH: 20180820 - Commented chatbutton click added user click
                //if (element.hasClass("textbtn") || element.hasClass("user")) {
                //MAR 20210224 commented the if condition
                //if (element.hasClass("user")) {
                    //ZH: 20180820 - Changed from element.parent() to just element. (Changed from textbtn click to user click)
                var userElem = element;//element.parent();
                var pending_msg = userElem.parent().attr("data-pending-msg");
                console.log(pending_msg);                    //console.log(userElem);
                    //console.log("Text Button Clicked...");

                    if ($('.video-chat-container').is(":visible")) {
                        if ($('.video-chat-container').find('#chatwrap').length != 0) {
                            session.disconnect();
                        }
                    }
                    $('.video-chat-container').hide();
                    //$('.text-chat-container').css('display', 'block');
                    //$('.message-area-header').html("In Conversation with " + userElem.text());

                    //ZH EH: 20180830
                    $('.message-area').html("");
                    var selected_bp_id = $(userElem).closest('tr').attr('bp_id');
                    var selected_dc_class = $(userElem).closest('tr').attr('dc_class');

                    if ($(element).hasClass("contact-offline")) {
                        //$('.chat-box').html("<span class=\"e-icon e-plus\"></span>Chat");
                        //15022021 RJ line 651 added and line 652 added
                       // $('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat")");
                        $('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat"): " + inConvMessage.replace('{0}', userElem.attr('data-display-name')));

                        //loadHistory($(userElem).closest('tr').attr('bp_id'), true);
                        //loadHistory(selected_bp_id, true);
                        load_msg_history(theBpId, selected_bp_id, selected_dc_class);
                        //20210214 RJ enable chat option for offline contacts
                        $('#sendmessage').prop("disabled", false);
                    $('#message').prop("disabled", false);

                        //EH 190318
                        toggle_onnline_offline_user('', selected_bp_id);
                    }
                    else {
                        //$('.chat-box').html("<span class=\"e-icon e-plus\"></span>Chat: In Conversation with " + userElem.text());  //MRR 180820 text changed from chat box to chat
                        //EH 190313
                        //$('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat"): " + inConvMessage.replace('{0}', userElem.text()));
                        $('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat"): " + inConvMessage.replace('{0}', userElem.attr('data-display-name')));

                        //$('.user[bp_id="' + userElem.attr('bp_id') + '"] span[data-contact-bp-id="' + userElem.attr('bp_id') + '"]').attr('data-pending-msg', 0);
                        //$('.user[bp_id="' + userElem.attr('bp_id') + '"] span[data-contact-bp-id="' + userElem.attr('bp_id') + '"]').text('');

                        //$('.text-chat-container').show("slide", { direction: 'left' }, "slow");
                        // Clear text box and reset focus for next comment.
                        $('#message').val('').focus();

                        //EH 190318
                        //$('#frndBpId').val(userElem.attr('bp_id'));
                        //toggle_onnline_offline_user($(userElem).attr('bp_id'),'');
                        toggle_onnline_offline_user(selected_bp_id, '');

                        //loadHistory($('#frndBpId').val(), true);
                        //loadHistory(selected_bp_id, true);
                        load_msg_history(theBpId, selected_bp_id, selected_dc_class);

                        $('#sendmessage').prop("disabled", false);
                        $('#message').prop("disabled", false);
                    }

                    //Expanding Chat Box & Chat History Accordion
                    $("#accordion").ejAccordion("expandPanel", [1]);

                    //Collapsing Users Accordion
                    //$("#accordion").ejAccordion("collapsePanel", [0]);

                    //if ($('#frndBpId').val() == userElem.attr('bp_id')) {

                    //ZH EH: 20180830 - Commented out following 2 lines. Local Storage now being set inside loadHistory
                    //var sharedObject = { 'lastFrnd': last_frd, 'last_history': $('.message-area').html() };
                    //SJ.localStorage.setItem('PL_CHAT_' + theBpId, JSON.stringify(sharedObject));

                    //}
                    //$('.chat-close-control').show();
                //}


                //If the clicked button is video chat button

                //count++;
                //}

                //RJ 20210301 calling load_msg_history
                // hard coded for testing
                //load_msg_history(2, 14019, 15, 128993, 128993);
            }

            $('#message').keyup(function (event) {
                if (event.keyCode == 13) {
                    $('#sendmessage').click();
                }
            });

            //ZH: 20180816 - Added to handle pop flash. Clicking here resembles messages are read
            $('.message-area').click(function () {
                chat.server.seenUnread();
            });

            //ZH: 20180816 - Added to handle pop flash. Focusing here resembles messages are read
            $('#message').click(function () {
                chat.server.seenUnread();
            });
        });



        // 20210304 RJ Getting msg data with ajax call (will be implemented as a part of onChatButtonClick)

        function get_msg_data(recepient_id, dc_class, org_id, pt_id) {


            var msg_data = [];

            if (dc_class == "PRIVATE_GROUP" || dc_class == "PUBLIC_GROUP") {
                var data = JSON.stringify({ "org_id": org_id, "pt_id": pt_id, "dc_id": recepient_id, "recipent_bp_id": recepient_id, "sender_bp_id": recepient_id });
                var tmp_url = "/TextChat/GetMsgHistory";
            }
            else {

                var data = JSON.stringify({ "bp_id": recepient_id });
                var tmp_url = "../../TextChat/GetHistoryContactList";
            }

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: "post",
                cache: false,
                async: false,
                url: tmp_url,
                data: data,
                success: function (response) {

                    msg_data = response;

                },
                error: function (xhr) {
                    $('#message-area-loader').hide();
                    alert("ajax calling failed");


                }
            });

            return msg_data;

        }




        //20210304 RJ loading message

        function load_msg_history(selected_bp_id, dc_id, discussion_class) {
                       var temp_org_id = "@ViewBag.orgId";

            var msg_data = JSON.parse(get_msg_data(dc_id, discussion_class, temp_org_id, null));

            $("#accordion").ejAccordion("expandPanel", [1]);
            $('#message-area-loader').show();
            $('#message-area-loader').hide();

            if (!("bp_id" in msg_data[0])) {
                for (var i = 0; i < msg_data.length; i++) {
                    var contact = "";

                    if (selected_bp_id == msg_data[i].sender_bp_id) {
                        if (msg_data[i].recipent_bp_id == msg_data[i].sender_bp_id){
                            contact = generate_msg_html(msg_data[i].recipent_bp_name, msg_data[i].topic_details, 'sent');

                            txt += contact;
                        }
                    }
                    else if (msg_data[i].recipent_bp_id == selected_bp_id) {
                        contact = generate_msg_html(msg_data[i].sender_bp_name, msg_data[i].topic_details, 'received');

                        txt += contact;


                    }


                }
            }
            else {
                var txt = "";
                for (var i = 0; i < msg_data.length; i++) {
                    var contact = "";

                    if (selected_bp_id == msg_data[i].bp_id) {
                        contact = generate_msg_html(msg_data[i].username, msg_data[i].message, 'sent');

                            txt += contact;


                    }
                    else {
                        contact = generate_msg_html(msg_data[i].username, msg_data[i].message, 'received');

                            txt += contact;

                    }


                }
            }

            /*var arr = txt.filter(function (x) {
                return x !== undefined;
            });*/
            //console.log(txt.split("undefined").pop());

            $('.message-area').prepend(txt.split("undefined").pop());
            scrollTBottom($('.message-area'));
        }













        //function onUserClick(element){
        //    console.log(element);
        //    $('.message-area-header').innerHTML = "In Conversation with ";
        //}

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        //MAR 20210219 : Creating a new Function for video chat button click

        function onPlVideoChatButtonClick(element) {

            //MAR 210216 added "chatbutton and user class for testing

            //console.log("Video Button Clicked...");

            //initVideoCallSession(userElem, theBpId, chat);
            //MAR 210321 Getting the Display name as RoomName
            //var vroomName = $(element).attr('data-display-name');

            //MAR 210216 commented initVideoCallSession for testing Jitsi


            const domain = 'meet.jit.si/' + create_UUID();
            const options = {
                roomName: 'Jitsi meet', //User Need to Input this name manually
                width: 520,
                height: 520,
                parentNode: document.querySelector('.message-area')
            };
            var api = new JitsiMeetExternalAPI(domain, options);
            console.log(api._url);
            const iframe = api.getIFrame();
            console.log(iframe);
            $('.message-area').html(iframe);

            var toBpId = $(element).attr('toBpId');


            var data = { service: "jitsi", serviceURL: api._url };
            console.log(data);

            chat.server.requestVideoCall(data, theBpId, toBpId);
            //chat.server.sendMessage($('#displayname').val(), api._url, theBpId, toBpId);
        }

        //MAR 20210215 : Created this UUID Generator to create unique URL for jitsi meet
        function create_UUID() {
            var dt = new Date().getTime();
            var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = (dt + Math.random() * 16) % 16 | 0;
                dt = Math.floor(dt / 16);
                return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);
            });
            return uuid;
        }


        function initVideoCallSession(userElement, senderBpId, chatObj) {
            var tokboxSessionData;

            $('.text-chat-container').hide();
            $('.video-chat-container').html("");
            $('.video-chat-container').html("<div style='text-align: center;'><h3>Connecting....Please wait</h3></div>");
            $('.video-chat-container').show("slide", { direction: 'left' }, "slow");

            $.get("/chatSession/getchatsession", function (data, status) {
                if (status == "success") {

                    var receiverBpId = userElement.attr("bp_id");

                    //chatObj.server.requestVideoCall(data, receiverConnId, senderBpId, receiverBpId);
                    chatObj.server.requestVideoCall(data, senderBpId, receiverBpId);

                    //Getting the video chat module
                    /*$.post("/chatSession/getvideochat", { apikey: data['apikey'], sessionid: data['sessionId'], token: data['token'] },
                        function (data, status) {
                            if (status == "success") {
                                //console.log(data);
                                $('.text-chat-container').hide();
                                $('.video-chat-container').html("");
                                $('.video-chat-container').html(data);
                                $('.video-chat-container').show();
                            }
                        });*/
                    $('.chat-close-control').show();
                    //For IE crossDomain must be set to true;
                    $.ajax({
                        url: "/chatSession/getvideochat",
                        type: "POST",
                        data: { apikey: data['apikey'], sessionid: data['sessionId'], token: data['token'] },
                        crossDomain: true,
                        success: function (data) {
                            $('.text-chat-container').hide();
                            $('.video-chat-container').html("");
                            $('.video-chat-container').html(data);
                            $('.video-chat-container').show();
                        }
                    });
                }

            }).error(function (data) {
                $('.video-chat-container').html("");
                $('.video-chat-container').html("<div style='text-align: center;'><h4>There was a problem initiating the video call.</h4></div>");
            });
        }

        //Function that is called from header
        //To be retired and replaced by plStartVideoCall
        function loadVideoChat(received_apikey, received_sessionid, received_token) {
            //alert("Called from header");
            //Getting the video chat module
            $.post("/chatSession/getvideochat", { apikey: received_apikey, sessionid: received_sessionid, token: received_token },
                function (data, status) {
                    if (status == "success") {
                        //console.log(data);
                        $('.text-chat-container').hide();
                        $('.video-chat-container').html("");
                        $('.video-chat-container').html(data);
                        $('.video-chat-container').show();
                    }
                });
        }

        //MAR 20210219 : New Video Call function for Jitsi test

        function plReceiveVideoCall(data, sender) {
            var obj = JSON.parse(data);
            if (obj.service == 'jitsi') {

                $('.message-area').html('<iframe allow="camera; microphone; fullscreen; display-capture" src="' + obj.serviceURL + '" style="height: 100%; width: 100%; border: 0px;"></iframe>');
                //$('.message-area').html(data);
                /*const domain = data._url;
                const options = {
                    roomName: 'JitsiMeetAPIExample', //userNeed to set the roomName Later on
                    width: 700,
                    height: 700,
                    parentNode: document.querySelector('.message-area')
                };
                const api = new JitsiMeetExternalAPI(domain, options);*/
            }

            else {
                $.post("/chatSession/getvideochat", { apikey: received_apikey, sessionid: received_sessionid, token: received_token },
                function (data, status) {
                    if (status == "success") {
                        //console.log(data);
                        $('.text-chat-container').hide();
                        $('.video-chat-container').html("");
                        $('.video-chat-container').html(data);
                        $('.video-chat-container').show();
                    }
                });
            }

        }

        function onCloseBtn() {
            if ($('.video-chat-container').is(":visible")) {
                if ($('.video-chat-container').find('#chatwrap').length != 0) {
                    session.disconnect();

                    $('.video-chat-container').html("");
                    $('.video-chat-container').hide("slide", { direction: 'left' }, "slow");
                }
            }
            else {
                $('.message-area').html("");
                //$('.text-chat-container').hide("slide", { direction: 'left' }, "slow");
                //$('.chat-box').html("<span class=\"e-icon e-plus\"></span>Chat");
                $('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat")");
                //Expaning the Users Accordion
                $("#accordion").ejAccordion("expandPanel", [0]);

                //Collapsning the Chat Box & Chat History Accordion
                //$("#accordion").ejAccordion("collapsePanel", [3, 4]);
            }
            $('#frndBpId').val('');
            $('.chat-close-control').hide();
        }

        function scrollTBottom(item) {
            var h = item.get(0).scrollHeight;
            item.animate({ scrollTop: h });
        }

        //Function to add new user connected to the hub / coming online to the DOM
        //function addNewUserElement(connectionid, username, bpid, display)

        //commented by EH 180828
        //MAR 20210219 Commented for 3 parametered addNewUserElement
        /*function addNewUserElement(username, bpid, display) {
            var userDiv = document.createElement("div");
            userDiv.className = "user";

            var connIDAttr = document.createAttribute("connId");
            connIDAttr.value = connectionid;
            userDiv.setAttributeNode(connIDAttr);

            var uNameAttr = document.createAttribute("userName");
            uNameAttr.value = username;
            userDiv.setAttributeNode(uNameAttr);

            var uBpIdAttr = document.createAttribute("bp_id");
            uBpIdAttr.value = bpid;
            userDiv.setAttributeNode(uBpIdAttr);

            userDiv.innerHTML = display;

            var textChatBtnDiv = document.createElement("div");
            var textChatBtn = document.createElement("input");
            textChatBtn.className = "btn btn-primary btn-sm"
            textChatBtn.type = "button";
            textChatBtn.value = "Text";

            var textChatBtn = document.createElement("button");
            textChatBtn.className = "btn btn-primary btn-sm"

            var textChatImage = document.createElement("i");
            textChatImage.className = "glyphicon glyphicon-edit";
            textChatBtn.appendChild(textChatImage);


            textChatBtnDiv.className = "chatbutton textbtn";
            textChatBtnDiv.appendChild(textChatBtn);

        //    //ZH: 20180817 - Temporarily Removing Video Button
            //MAR: 20210217 - Re activating the video button

            var videoChatBtnDiv = document.createElement("div");
            var videoChatBtn = document.createElement("input");
            videoChatBtn.className = "btn btn-primary btn-sm"
            videoChatBtn.type = "button";
            videoChatBtn.value = "Video";

            var videoChatBtn = document.createElement("button");
            videoChatBtn.id = "pl-videochat" + '-' + bpid;

            var toBpIdAttr = document.createAttribute('toBpid');
            toBpIdAttr.value = bpid;
            videoChatBtn.setAttributeNode(toBpIdAttr);

            var onClickAttr = document.createAttribute('onClick');
            onClickAttr.value = 'onPlVideoChatButtonClick($(this))';
            videoChatBtn.setAttributeNode(onClickAttr);

            videoChatBtn.className = "btn btn-primary btn-sm"

            var videoChatImage = document.createElement("i");
            videoChatImage.className = "glyphicon glyphicon-facetime-video";
            videoChatBtn.appendChild(videoChatImage);

            videoChatBtnDiv.className = "chatbutton videobtn user";//MAR 20210215 for testing videobtn added "user"
            videoChatBtnDiv.appendChild(videoChatBtn);


            userDiv.appendChild(videoChatBtnDiv);
            userDiv.appendChild(textChatBtnDiv);

            return userDiv;
        }*/

        //EH 180829 add online menu div
        function OnlineUserMenuDiv() {
            var menuDiv = document.createElement("div");
            menuDiv.className = "onlineMenu";
            menuDiv.style.borderBottom = "1px solid black";
            menuDiv.style.padding = "0 5px";
            var paragraph = document.createElement("p");
           // debugger;
            var menuLInkAll = document.createElement("a");
            menuLInkAll.id = "menulinkall";
            menuLInkAll.style.textDecoration = "none";
            menuLInkAll.style.color = "black";
            menuLInkAll.style.cursor = "pointer";
           // var hrefAttr = document.createAttribute("href");
            //hrefAttr.value = "#";
            //menuLInkAll.setAttributeNode(hrefAttr);
            var onclickAttr = document.createAttribute("onclick");
            onclickAttr.value = "showOnlineUser('all',this)";
            console.log("MAR: " + onclickAttr.value);
            menuLInkAll.setAttributeNode(onclickAttr);
            //menuLInkAll.innerHTML = "All";
            menuLInkAll.innerHTML = "@PL_T("AV.TextChat.TextChat.Contacts.Filter.All", "All")";
            paragraph.appendChild(menuLInkAll);

            var menuLInkOnline = document.createElement("a");
            menuLInkOnline.style.textDecoration = "none";
            menuLInkOnline.style.color = "black";
            menuLInkOnline.style.cursor = "pointer";
           // var hrefAttr = document.createAttribute("href");
            //hrefAttr.value = "#";
            //menuLInkOnline.setAttributeNode(hrefAttr);
            var onclickAttr = document.createAttribute("onclick");
            onclickAttr.value = "showOnlineUser('online',this)";
            menuLInkOnline.setAttributeNode(onclickAttr);
            //menuLInkOnline.innerHTML = "<span style='color:black'> | </span> Online";
            menuLInkOnline.innerHTML = "<span style='color:black'> | </span> @PL_T("AV.TextChat.TextChat.Contacts.Filter.Online", "Online")";
            paragraph.appendChild(menuLInkOnline);

            var menuLInkContact = document.createElement("a");
            menuLInkContact.style.textDecoration = "none";
            menuLInkContact.style.color = "black";
            menuLInkContact.style.cursor = "pointer";
            //var hrefAttr = document.createAttribute("href");
           // hrefAttr.value = "#";
            //menuLInkContact.setAttributeNode(hrefAttr);
            var onclickAttr = document.createAttribute("onclick");
            onclickAttr.value = "showOnlineUser('contact',this)";
            menuLInkContact.setAttributeNode(onclickAttr);
            //menuLInkContact.innerHTML = "<span style='color:black'> | </span>Contact";
            menuLInkContact.innerHTML = "<span style='color:black'> | </span>@PL_T("AV.TextChat.TextChat.Contacts.Filter.Contact", "Contact")";
            paragraph.appendChild(menuLInkContact);



            //20210218 RJ add group menu (in progress)
            var menuLInkGroup = document.createElement("a");
            menuLInkGroup.id = "menulinkgroup";
            menuLInkGroup.style.textDecoration = "none";
            menuLInkGroup.style.color = "black";
            menuLInkGroup.style.cursor = "pointer";

            var onclickAttr = document.createAttribute("onclick");
            //onclickAttr.value = "showOnlineUser('group',this)";
            onclickAttr.value = "showGroups(this)";
            menuLInkGroup.setAttributeNode(onclickAttr);

            menuLInkGroup.innerHTML = "<span style='color:black'> | </span>@PL_T("AV.TextChat.TextChat.Contacts.Filter.Group", "Group")";
            paragraph.appendChild(menuLInkGroup);

            var innerHtml = paragraph.innerHTML;
            //paragraph.innerHTML = "View : " + innerHtml;
            paragraph.innerHTML = "@PL_T("AV.TextChat.TextChat.Contacts.Filter.Label", "View") : " + innerHtml;
            menuDiv.appendChild(paragraph);
            return menuDiv;

        }

    function showGroups(Obj) {
            $(".onlineMenu a").removeClass("onlineMenuItem");
            $(Obj).addClass("onlineMenuItem");

            //$("#userTable").hide();
            //var temp_org_id = "@ViewBag.org_id";
            var temp_org_id = "@ViewBag.orgId";
            getGroupNames(temp_org_id, null);
        }

        function showOnlineUser(value, Obj) {
            //debugger;
            if (value == "all") {
                $("#nonMemberTable").hide();
                $("#nonMemberButtonDiv").hide();
                $("#GroupsTable").hide();
                $("#userTable").show();
                $(".user.online").parent().css("display", "");
                $(".user.contact-online").parent().css("display", "");
                $(".user.contact-offline").parent().css("display", "");
                $(".onlineMenu a").removeClass("onlineMenuItem");
                $(Obj).addClass("onlineMenuItem");

            }
            else if (value == "online") {
                console.log("Online Clicked!");
                $("#nonMemberTable").hide();
                $("#nonMemberButtonDiv").hide();
                $(".user.contact-offline").parent().css("display", "none");
                $(".user.online").parent().css("display", "");
                $(".user.contact-online").parent().css("display", "");

                $(".onlineMenu a").removeClass("onlineMenuItem");
                $(Obj).addClass("onlineMenuItem");
            }
            else if (value == "contact") {
                $("#nonMemberTable").hide();
                $("#nonMemberButtonDiv").hide();
                $("#userOnline .online").css("display", "none");
                $("#userOnline .contact-online").css("display", "");
                $("#userOnline .contact-offline").css("display", "");
                $(".onlineMenu a").removeClass("onlineMenuItem");
                $(Obj).addClass("onlineMenuItem");

            }
            //20210218 RJ added group menu
            else if (value == "group") {

                console.log(value);
               // $("#userOnline .online").css("display", "none");
               // $("#userOnline .contact-online").css("display", "none");
                //$("#userOnline .contact-offline").css("display", "");
               // $("#userOnline .user-group").css("display", "");
                //$(".onlineMenu a").removeClass("onlineMenuItem");
                //$(Obj).addClass("onlineMenuItem");

            }

           }
        function onChatButtonClick(element) {

            //if (count <= 0) {
            //console.log("Button Clicked...");
            //If the clicked button is text chat button

            //ZH: 20180820 - Commented chatbutton click added user click
            //if (element.hasClass("textbtn") || element.hasClass("user")) {
            //MAR 20210224 commented the if condition
            //if (element.hasClass("user")) {
            //ZH: 20180820 - Changed from element.parent() to just element. (Changed from textbtn click to user click)
            var userElem = element;//element.parent();

            //console.log(userElem);
            //console.log("Text Button Clicked...");

            if ($('.video-chat-container').is(":visible")) {
                if ($('.video-chat-container').find('#chatwrap').length != 0) {
                    session.disconnect();
                }
            }
            $('.video-chat-container').hide();
            //$('.text-chat-container').css('display', 'block');
            //$('.message-area-header').html("In Conversation with " + userElem.text());

            //ZH EH: 20180830
            $('.message-area').html("");
            var selected_bp_id = $(userElem).closest('tr').attr('bp_id');
            var selected_dc_class = $(userElem).closest('tr').attr('dc_class');


            if (selected_bp_id == undefined)
            {
                selected_bp_id = $(userElem).closest('tr').attr('dc_id');
            }

            if ($(element).hasClass("contact-offline")) {
                //$('.chat-box').html("<span class=\"e-icon e-plus\"></span>Chat");
                // $('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat")");
                $('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat"): " + inConvMessage.replace('{0}', userElem.attr('data-display-name')));

                //loadHistory($(userElem).closest('tr').attr('bp_id'), true);
                //loadHistory(selected_bp_id, true);
                load_msg_history(theBpId,selected_bp_id, selected_dc_class);
                //20210214 RJ enable chat option for offline contacts
                $('#sendmessage').prop("disabled", false);
                $('#message').prop("disabled", false);

                //EH 190318
                toggle_onnline_offline_user('', selected_bp_id);
            }
            else {
                //$('.chat-box').html("<span class=\"e-icon e-plus\"></span>Chat: In Conversation with " + userElem.text());  //MRR 180820 text changed from chat box to chat
                //EH 190313
                //$('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat"): " + inConvMessage.replace('{0}', userElem.text()));
                $('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat"): " + inConvMessage.replace('{0}', userElem.attr('data-display-name')));

                //$('.user[bp_id="' + userElem.attr('bp_id') + '"] span[data-contact-bp-id="' + userElem.attr('bp_id') + '"]').attr('data-pending-msg', 0);
                //$('.user[bp_id="' + userElem.attr('bp_id') + '"] span[data-contact-bp-id="' + userElem.attr('bp_id') + '"]').text('');

                //$('.text-chat-container').show("slide", { direction: 'left' }, "slow");
                // Clear text box and reset focus for next comment.
                $('#message').val('').focus();

                //EH 190318
                //$('#frndBpId').val(userElem.attr('bp_id'));
                //toggle_onnline_offline_user($(userElem).attr('bp_id'),'');
                toggle_onnline_offline_user(selected_bp_id, '');

                //loadHistory($('#frndBpId').val(), true);
                //loadHistory(selected_bp_id, true);
                load_msg_history(theBpId, selected_bp_id, selected_dc_class);

                $('#sendmessage').prop("disabled", false);
                $('#message').prop("disabled", false);
            }

            //Expanding Chat Box & Chat History Accordion
            $("#accordion").ejAccordion("expandPanel", [1]);

            //Collapsing Users Accordion
            //$("#accordion").ejAccordion("collapsePanel", [0]);

            //if ($('#frndBpId').val() == userElem.attr('bp_id')) {

            //ZH EH: 20180830 - Commented out following 2 lines. Local Storage now being set inside loadHistory
            //var sharedObject = { 'lastFrnd': last_frd, 'last_history': $('.message-area').html() };
            //SJ.localStorage.setItem('PL_CHAT_' + theBpId, JSON.stringify(sharedObject));

            //}
            //$('.chat-close-control').show();
            //}


            //If the clicked button is video chat button

            //count++;
            //}

            //RJ 20210301 calling load_msg_history
            // hard coded for testing
            //load_msg_history(2, 14019, 15, 128993, 128993);
        }

    function addGroupNonMemberElement(username, bp_id, contactStatus) {
        var userRow = document.createElement("tr");

        var userNameTableData = document.createElement("td");
        var userCheckBoxTableData1 = document.createElement("td");
        var userCheckBoxTableData2 = document.createElement("td");


        if (contactStatus == "online") {
            //userDiv.className = "user online";
            userNameTableData.className = "user online";
            // debugger;
            var iconSpan = document.createElement("i");
            iconSpan.className = "glyphicons glyphicons-parents";
        }

        else if (contactStatus == "contact-online") {
            //userDiv.className = "user contact-online";
            userNameTableData.className = "user contact-online";
            // debugger;
            var iconSpan = document.createElement("i");
            iconSpan.className = "glyphicons glyphicons-address-book";
        }

        else if (contactStatus == "contact-offline") {
            //userDiv.className = "user contact-offline";
            userNameTableData.className = "user contact-offline";
            // debugger;
            var iconSpan = document.createElement("i");
            iconSpan.className = "glyphicons glyphicons-address-book";
        }

        var alignAttr1 = document.createAttribute("align");
        alignAttr1.value = "center";

        var alignAttr2 = document.createAttribute("align");
        alignAttr2.value = "center";

        userCheckBoxTableData1.setAttributeNode(alignAttr1);
        userCheckBoxTableData2.setAttributeNode(alignAttr2);

        userNameTableData.innerHTML = iconSpan.outerHTML + username;
        
        var checkBoxElem1 = document.createElement("input");

        var checkBoxTypeAttr1 = document.createAttribute("type");
        checkBoxTypeAttr1.value = "checkbox";
        checkBoxElem1.setAttributeNode(checkBoxTypeAttr1);

        var checkBoxBpIDAttr1 = document.createAttribute("bp_id");
        checkBoxBpIDAttr1.value = bp_id;
        checkBoxElem1.setAttributeNode(checkBoxBpIDAttr1);

        var checkBoxElem2 = document.createElement("input");

        var checkBoxTypeAttr2 = document.createAttribute("type");
        checkBoxTypeAttr2.value = "checkbox";
        checkBoxElem2.setAttributeNode(checkBoxTypeAttr2);

        var checkBoxBpIDAttr2 = document.createAttribute("bp_id");
        checkBoxBpIDAttr2.value = bp_id;
        checkBoxElem2.setAttributeNode(checkBoxBpIDAttr2);

        userCheckBoxTableData1.appendChild(checkBoxElem1);
        userCheckBoxTableData2.appendChild(checkBoxElem2);

        userRow.appendChild(userNameTableData);
        userRow.appendChild(userCheckBoxTableData1);
        userRow.appendChild(userCheckBoxTableData2);

        return userRow;

    }


        //function addNewUserElement(username, bpid, display, contactStatus) { //implement similar function like addNewUserElement inside get groups name
        //MAR 20210407 Refactoring addNewUserElement for group and single chat
        function addNewUserElement(username, recepient_id, dc_id, dc_class, display, contactStatus) {
            if (dc_class == "CHAT")
            {
                //<tr> , name in one <td> and buttons are another <td>
                var userRow = document.createElement("tr"); //this function will return this entire row consisting of two td

                var userNameTableData = document.createElement("td");

                //MAR 20210329 Making Text Chat & Video Chat Button as two different table data element to control the spacing
                //var userChatButtonsTableData = document.createElement("td");
                var userTextChatbuttonTableData = document.createElement("td");
                var userVideoChatbuttonTableData = document.createElement("td");

                //var userDiv = document.createElement("div");

                if (contactStatus == "online") {
                    //userDiv.className = "user online";
                    userNameTableData.className = "user online";
                    // debugger;
                    var iconSpan = document.createElement("i");
                    iconSpan.className = "glyphicons glyphicons-parents";
                }

                else if (contactStatus == "contact-online") {
                    //userDiv.className = "user contact-online";
                    userNameTableData.className = "user contact-online";
                    // debugger;
                    var iconSpan = document.createElement("i");
                    iconSpan.className = "glyphicons glyphicons-address-book";
                }

                else if (contactStatus == "contact-offline") {
                    //userDiv.className = "user contact-offline";
                    userNameTableData.className = "user contact-offline";
                    // debugger;
                    var iconSpan = document.createElement("i");
                    iconSpan.className = "glyphicons glyphicons-address-book";
                }


                /*var uNameAttr = document.createAttribute("userName");
                uNameAttr.value = username;
                userDiv.setAttributeNode(uNameAttr);

                var uBpIdAttr = document.createAttribute("bp_id");
                uBpIdAttr.value = bpid;
                userDiv.setAttributeNode(uBpIdAttr);*/

                //MAR 20210224
                var uNameAttr = document.createAttribute("userName");
                uNameAttr.value = username;
                userNameTableData.setAttributeNode(uNameAttr);

                var uBpIdAttr = document.createAttribute("bp_id");
                uBpIdAttr.value = recepient_id;
                //userNameTableData.setAttributeNode(uBpIdAttr);
                userRow.setAttributeNode(uBpIdAttr);

                var IdAttr = document.createAttribute("id");
                IdAttr.value = recepient_id;
                userNameTableData.setAttributeNode(IdAttr);
                //userRow.setAttributeNode(uBpIdAttr);


                var uDcClassAttr = document.createAttribute("dc_class");
                uDcClassAttr.value = dc_class;
                //userNameTableData.setAttributeNode(uBpIdAttr);
                userRow.setAttributeNode(uDcClassAttr);

                //EH 190313
                /*var uDisplayNameAttr = document.createAttribute("data-display-name");
                uDisplayNameAttr.value = display;
                userDiv.setAttributeNode(uDisplayNameAttr);*/

                //MAR 20210224

                var uDisplayNameAttr = document.createAttribute("data-display-name");
                uDisplayNameAttr.value = display;
                userNameTableData.setAttributeNode(uDisplayNameAttr);

                var onNameClickAttr = document.createAttribute('onClick');
                onNameClickAttr.value = 'onChatButtonClick($(this))';
                userNameTableData.setAttributeNode(onNameClickAttr);

                //userDiv.innerHTML = iconSpan.outerHTML + display;
                //userNameTableData.className = "chat-display-name";
                userNameTableData.innerHTML = iconSpan.outerHTML + display;

                //EH 190313 adding pending msg display span
                var msgCountSpan = document.createElement("span");
                msgCountSpan.className = "badge";
                //var spanStyleAttr = document.createAttribute("style");
                //spanStyleAttr.value = 'max-height:18px;font-size:10px;margin-left:4px;background-color: #fff200;color:#333';
                //msgCountSpan.setAttributeNode(spanStyleAttr);


                var spanBpIdAttr = document.createAttribute("data-contact-bp-id");
                spanBpIdAttr.value = recepient_id;
                msgCountSpan.setAttributeNode(spanBpIdAttr);

                var spanCountAttr = document.createAttribute("data-pending-msg");
                spanCountAttr.value = 0;
               // msgCountSpan.setAttributeNode(spanCountAttr);
                userNameTableData.setAttributeNode(spanCountAttr);
                //////
                //MAR 20210224 TextChat and VideoChat Button TableData construction
                //var textChatBtnDiv = document.createElement("div");

                //textChat Button HTML
                //var chatButtonsTableData = document.createElement("td");

                //var textChatBtn = document.createElement("button");
                var textChatBtn = document.createElement("image");
                //textChatBtn.className = "btn btn-primary btn-sm chatbutton";

                //MAR 20210223 Added On Click Attribute for Text Chat  button
                var onTxtClickAttr = document.createAttribute('onClick');
                onTxtClickAttr.value = 'onChatButtonClick($(this))';
                textChatBtn.setAttributeNode(onTxtClickAttr);

                var textChatImage = document.createElement("i");
                textChatImage.className = "glyphicon glyphicon-edit";
                textChatBtn.appendChild(textChatImage);



                //chatButtonsTableData.className = "chatbutton textbtn";
                //chatButtonsTableData.appendChild(textChatBtn);
                userTextChatbuttonTableData.appendChild(textChatBtn);

                //ZH: 20180817 - Temporarily Removing Video Button

                //var videoChatBtnDiv = document.createElement("div");
                //var videoChatBtn = document.createElement("input");
                //videoChatBtn.className = "btn btn-primary btn-sm"
                //videoChatBtn.type = "button";
                //videoChatBtn.value = "Video";

                //var videoChatBtn = document.createElement("button");
                //videoChatBtn.className = "btn btn-primary btn-sm"

                //var videoChatImage = document.createElement("i");
                //videoChatImage.className = "glyphicon glyphicon-facetime-video";
                //videoChatBtn.appendChild(videoChatImage);

                //videoChatBtnDiv.className = "chatbutton videobtn user"; //MAR 210215 for testing videobtn added "user"
                //videoChatBtnDiv.appendChild(videoChatBtn);


                //userDiv.appendChild(videoChatBtnDiv);

                //videoChat Button HTML

                //var videoChatBtnDiv = document.createElement("div");


                //var videoChatBtn = document.createElement("button");
                var videoChatBtn = document.createElement("image");
                videoChatBtn.id = "pl-videochat" + '-' + recepient_id;

                var toBpIdAttr = document.createAttribute('toBpid');
                toBpIdAttr.value = recepient_id;
                videoChatBtn.setAttributeNode(toBpIdAttr);

                var onClickAttr = document.createAttribute('onClick');
                onClickAttr.value = 'onPlVideoChatButtonClick($(this))';
                videoChatBtn.setAttributeNode(onClickAttr);

                //videoChatBtn.className = "btn btn-primary btn-sm"

                var videoChatImage = document.createElement("i");
                videoChatImage.className = "glyphicon glyphicon-facetime-video";
                videoChatBtn.appendChild(videoChatImage);


                //videoChatBtnDiv.className = "chatbutton videobtn";
                //videoChatBtnDiv.appendChild(videoChatBtn);
                //chatButtonsTableData.appendChild(videoChatBtn);
                userVideoChatbuttonTableData.appendChild(videoChatBtn);
                //EH 190313
                //MAR 20210224

                /*userDiv.appendChild(videoChatBtnDiv);
                userDiv.appendChild(msgCountSpan);
                userDiv.appendChild(textChatBtnDiv);*/

                userRow.appendChild(userNameTableData);
                userRow.appendChild(userTextChatbuttonTableData);
                userRow.appendChild(userVideoChatbuttonTableData);

                return userRow;
            }
            else if (dc_class == "PUBLIC_GROUP" || dc_class == "PRIVATE_GROUP")
            {
                //<tr> , name in one <td> and buttons are another <td>
                var userRow = document.createElement("tr"); //this function will return this entire row consisting of two td

                var userNameTableData = document.createElement("td");

                //MAR 20210329 Making Text Chat & Video Chat Button as two different table data element to control the spacing
                //var userChatButtonsTableData = document.createElement("td");
                var userTextChatbuttonTableData = document.createElement("td");
                var userVideoChatbuttonTableData = document.createElement("td");
                var userMenuButtonTableData = document.createElement("td");

                //var userDiv = document.createElement("div");

                if (contactStatus == "online") {
                    //userDiv.className = "user online";
                    userNameTableData.className = "user online";
                    // debugger;
                    var iconSpan = document.createElement("i");
                    iconSpan.className = "glyphicons glyphicons-parents";
                }

                else if (contactStatus == "contact-online") {
                    //userDiv.className = "user contact-online";
                    userNameTableData.className = "user contact-online";
                    // debugger;
                    var iconSpan = document.createElement("i");
                    iconSpan.className = "glyphicons glyphicons-address-book";
                }

                else if (contactStatus == "contact-offline") {
                    //userDiv.className = "user contact-offline";
                    userNameTableData.className = "user contact-offline";
                    // debugger;
                    var iconSpan = document.createElement("i");
                    iconSpan.className = "glyphicons glyphicons-address-book";
                }


                /*var uNameAttr = document.createAttribute("userName");
                uNameAttr.value = username;
                userDiv.setAttributeNode(uNameAttr);

                var uBpIdAttr = document.createAttribute("bp_id");
                uBpIdAttr.value = bpid;
                userDiv.setAttributeNode(uBpIdAttr);*/

                //MAR 20210224
                var uNameAttr = document.createAttribute("userName");
                uNameAttr.value = username;
                userNameTableData.setAttributeNode(uNameAttr);

                var uDcIdAttr = document.createAttribute("dc_id");
                uDcIdAttr.value = dc_id;
                //userNameTableData.setAttributeNode(uBpIdAttr);
                userRow.setAttributeNode(uDcIdAttr);

                var uDcClassAttr = document.createAttribute("dc_class");
                uDcClassAttr.value = dc_class;
                //userNameTableData.setAttributeNode(uBpIdAttr);
                userRow.setAttributeNode(uDcClassAttr);

                //EH 190313
                /*var uDisplayNameAttr = document.createAttribute("data-display-name");
                uDisplayNameAttr.value = display;
                userDiv.setAttributeNode(uDisplayNameAttr);*/

                //MAR 20210224

                var uDisplayNameAttr = document.createAttribute("data-display-name");
                uDisplayNameAttr.value = display;
                userNameTableData.setAttributeNode(uDisplayNameAttr);

                var onNameClickAttr = document.createAttribute('onClick');
                onNameClickAttr.value = 'onChatButtonClick($(this))';
                userNameTableData.setAttributeNode(onNameClickAttr);

                //userDiv.innerHTML = iconSpan.outerHTML + display;
                //userNameTableData.className = "chat-display-name";
                userNameTableData.innerHTML = iconSpan.outerHTML + display;

                //EH 190313 adding pending msg display span
                var msgCountSpan = document.createElement("span");
                msgCountSpan.className = "badge";
                //var spanStyleAttr = document.createAttribute("style");
                //spanStyleAttr.value = 'max-height:18px;font-size:10px;margin-left:4px;background-color: #fff200;color:#333';
                //msgCountSpan.setAttributeNode(spanStyleAttr);


                var spanBpIdAttr = document.createAttribute("data-contact-bp-id");
                spanBpIdAttr.value = recepient_id;
                msgCountSpan.setAttributeNode(spanBpIdAttr);


                var spanCountAttr = document.createAttribute("data-pending-msg");
                spanCountAttr.value = 0;
                msgCountSpan.setAttributeNode(spanCountAttr);
                //////
                //MAR 20210224 TextChat and VideoChat Button TableData construction
                //var textChatBtnDiv = document.createElement("div");

                //textChat Button HTML
                //var chatButtonsTableData = document.createElement("td");

                //var textChatBtn = document.createElement("button");
                var textChatBtn = document.createElement("image");
                //textChatBtn.className = "btn btn-primary btn-sm chatbutton";

                //MAR 20210223 Added On Click Attribute for Text Chat  button
                var onTxtClickAttr = document.createAttribute('onClick');
                onTxtClickAttr.value = 'onChatButtonClick($(this))';
                textChatBtn.setAttributeNode(onTxtClickAttr);

                var textChatImage = document.createElement("i");
                textChatImage.className = "glyphicon glyphicon-edit";
                textChatBtn.appendChild(textChatImage);


                //chatButtonsTableData.className = "chatbutton textbtn";
                //chatButtonsTableData.appendChild(textChatBtn);
                userTextChatbuttonTableData.appendChild(textChatBtn);

                //ZH: 20180817 - Temporarily Removing Video Button

                //var videoChatBtnDiv = document.createElement("div");
                //var videoChatBtn = document.createElement("input");
                //videoChatBtn.className = "btn btn-primary btn-sm"
                //videoChatBtn.type = "button";
                //videoChatBtn.value = "Video";

                //var videoChatBtn = document.createElement("button");
                //videoChatBtn.className = "btn btn-primary btn-sm"

                //var videoChatImage = document.createElement("i");
                //videoChatImage.className = "glyphicon glyphicon-facetime-video";
                //videoChatBtn.appendChild(videoChatImage);

                //videoChatBtnDiv.className = "chatbutton videobtn user"; //MAR 210215 for testing videobtn added "user"
                //videoChatBtnDiv.appendChild(videoChatBtn);


                //userDiv.appendChild(videoChatBtnDiv);

                //videoChat Button HTML

                //var videoChatBtnDiv = document.createElement("div");


                //var videoChatBtn = document.createElement("button");
                var videoChatBtn = document.createElement("image");
                videoChatBtn.id = "pl-videochat" + '-' + recepient_id;

                var toBpIdAttr = document.createAttribute('toBpid');
                toBpIdAttr.value = recepient_id;
                videoChatBtn.setAttributeNode(toBpIdAttr);

                var onClickAttr = document.createAttribute('onClick');
                onClickAttr.value = 'onPlVideoChatButtonClick($(this))';
                videoChatBtn.setAttributeNode(onClickAttr);

                //videoChatBtn.className = "btn btn-primary btn-sm"

                var videoChatImage = document.createElement("i");
                videoChatImage.className = "glyphicon glyphicon-facetime-video";
                videoChatBtn.appendChild(videoChatImage);


                //videoChatBtnDiv.className = "chatbutton videobtn";
                //videoChatBtnDiv.appendChild(videoChatBtn);
                //chatButtonsTableData.appendChild(videoChatBtn);
                userVideoChatbuttonTableData.appendChild(videoChatBtn);

                userNameTableData.appendChild(msgCountSpan);
                //Hamburger Menu
                //MAR 20210504 Adding hamburger menu icon for group member add and delete function

                var dropDownMenuDiv = document.createElement("div");
                dropDownMenuDiv.className = "dropdown";

                //var menuBtn = document.createElement("button");
                var menuBtn = document.createElement("image");
                //menuBtn.className = "btn btn-primary dropdown-toggle";

                var menuIdAttr = document.createAttribute('id');
                menuIdAttr.value = "GroupMenu";
                menuBtn.setAttributeNode(menuIdAttr);

                var dataToggleAttr = document.createAttribute('data-toggle');
                dataToggleAttr.value = 'dropdown';
                menuBtn.setAttributeNode(dataToggleAttr);

                /*var hasPopupAttr = document.createAttribute('aria-haspopup');
                hasPopupAttr.value = 'true';
                menuBtn.setAttributeNode(hasPopupAttr);*/

                /*var expandedAttr = document.createAttribute('aria-expanded');
                expandedAttr.value = 'false';
                menuBtn.setAttributeNode(expandedAttr);*/

                /*var onMenuClickAttr = document.createAttribute('onClick');
                onMenuClickAttr.value = 'onMenuButtonClick($(this))';
                menuBtn.setAttributeNode(onMenuClickAttr);*/

                var menuImage = document.createElement("span");
                menuImage.className = "glyphicon hamburger-menu";
                menuBtn.appendChild(menuImage);

                /*var menuImage = document.createElement("span");
                menuImage.className = "caret";
                menuBtn.appendChild(menuImage);*/

                //chatButtonsTableData.className = "chatbutton textbtn";
                //chatButtonsTableData.appendChild(textChatBtn);
                dropDownMenuDiv.appendChild(menuBtn);



                //Creating the collapseable unordered list
                var collapseDiv = document.createElement("ul");
                collapseDiv.className = "dropdown-menu";

                var divIdAttr = document.createAttribute("id");
                divIdAttr.value = "dropdwn";
                collapseDiv.setAttributeNode(divIdAttr);

                var listItem1 = document.createElement("li");
                var listItem2 = document.createElement("li");

                var anchorElem1 = document.createElement("a");
                var anchorElem2 = document.createElement("a");

                var aIdAttr1 = document.createAttribute("id");
                aIdAttr1.value = "1";
                anchorElem1.setAttributeNode(aIdAttr1);

                anchorElem1.innerText = "Add Group Member";

                var clickAttr1 = document.createAttribute("onClick");
                clickAttr1.value = "AddGroupMember($(this))";
                anchorElem1.setAttributeNode(clickAttr1);

                listItem1.appendChild(anchorElem1);

                var aIdAttr2 = document.createAttribute("id");
                aIdAttr2.value = "2";
                anchorElem2.setAttributeNode(aIdAttr2);

                var clickAttr2 = document.createAttribute("onClick");
                clickAttr2.value = "deletePrompt($(this))";
                anchorElem2.setAttributeNode(clickAttr2);

                anchorElem2.innerText = "Delete Group";

                listItem2.appendChild(anchorElem2);

                collapseDiv.appendChild(listItem1);
                collapseDiv.appendChild(listItem2);
                //EH 190313
                //MAR 20210224

                /*userDiv.appendChild(videoChatBtnDiv);
                userDiv.appendChild(msgCountSpan);
                userDiv.appendChild(textChatBtnDiv);*/
                dropDownMenuDiv.appendChild(collapseDiv);
                userMenuButtonTableData.appendChild(dropDownMenuDiv);

                userRow.appendChild(userNameTableData);
                userRow.appendChild(userTextChatbuttonTableData);
                userRow.appendChild(userVideoChatbuttonTableData);
                userRow.appendChild(userMenuButtonTableData);
                //userRow.appendChild(collapseDiv);

                return userRow;
            }
        }

        function AddGroupMember(element)
        {
            var dc_id = element.parent().parent().parent().parent().parent().attr("dc_id");
            var nonMembers = NonMember_list(dc_id);
            
            var nonMemberDiv = document.createElement("table");
            nonMemberDiv.id = "nonMemberTable";
            var tableStyle = document.createAttribute("style");
            tableStyle.value = "width : 100%";
            nonMemberDiv.setAttributeNode(tableStyle);

            var tableHeader = document.createElement("th");
            var adminTableHeader = document.createElement("th");
            var participantTableHeader = document.createElement("th");

            nonMemberDiv.appendChild(tableHeader);

            adminTableHeader.innerHTML = "Admin";
            nonMemberDiv.appendChild(adminTableHeader);

            participantTableHeader.innerHTML = "Participant";
            nonMemberDiv.appendChild(participantTableHeader);
            for (i = 0 ; i<nonMembers.length ; i++)
            {
                var nonMemberData = addGroupNonMemberElement(nonMembers[i].displayName, nonMembers[i].bpId, nonMembers[i].contactStatus);
                nonMemberDiv.appendChild(nonMemberData);
            }

            var buttonDiv = document.createElement("div");
            buttonDiv.className = "nonMemberButtondiv";

            var confirmButton = document.createElement("button");
            confirmButton.className = "btn btn-primary";
            confirmButton.innerHTML = "Confirm";

            buttonDiv.appendChild(confirmButton);

            $("#GroupsTable").hide();
            var onlineUsersClass = document.getElementsByClassName("online-users");
            //Check if Groups Table already exists
            var nonMemberTable = document.getElementById("nonMemberTable");
            //console.log(userDivs);
            if (nonMemberTable != null) {
                //If exists , Replace existing group table by userDivs
                $("#GroupsTable").replaceWith(nonMemberDiv);
            }
            else {
                //otherwise, appendChild the userDivs
                onlineUsersClass[0].appendChild(nonMemberDiv);
                onlineUsersClass[0].appendChild(buttonDiv);
            }

        }

        //MAR 20210504 Drop Down Options for Hamburger menu on Groups
        function onMenuButtonClick(obj)
        {
            /*var options = ["Add Group Member", "Delete group"];

            var selectElem = document.createElement("select");
            selectElem.name = "Group Menu";
            selectElem.id = "GroupOptions";

            for(const val of options)
            {
                var option = document.createElement("option");
                option.value = val;
                option.text = val.charAt(0).toUpperCase() + val.slice(1);
                selectElem.appendChild(option);
            }
            document.getElementById("GroupMenu").appendChild(selectElem);*/
            console.log("MENU CLICKED");
            document.getElementById("dropdwn").classList.toggle("show");
        }


        function deletePrompt(element)
        {
            var dc_id = element.parent().parent().parent().parent().parent().attr("dc_id");

            $("#AcceptButton").attr("acceptDcId", dc_id);


            $("#DeleteGroupModal").modal("show");
        }

    //MAR 20210506 Group delete function
        function deleteGroup()
        {
            var dc_id = $("#AcceptButton").attr("acceptDcId");
            $("#DeleteGroupModal").modal("hide");
            console.log("DC ID is : ",dc_id);

            //20210510 RJ ajax call for group delete
            var org_id = "@ViewBag.orgId";
            var final_query_string = '{"org_id":"' + org_id + '","dc_id":"' + dc_id + '"}';
           // $("#videoCallModal").modal();
            var check = GroupAjax(final_query_string, "DeleteGroup");

            var temp_org_id = "@ViewBag.orgId";
            getGroupNames(temp_org_id, null);

        }

        /*20210306 RJ commented for restructure
        function addNewTextMessageElement(name, message,type) {
            //var messageDiv = document.createElement("div");
            //messageDiv.className = "text-message";
            //messageDiv.innerHTML = '<strong>' + htmlEncode(name) + '</strong>: ' + htmlEncode(message);
            //debugger;
            var messageDiv = "";
            if (type == "received") {
                messageDiv = "<div class='pl_tc_rcvd_from'>" + htmlEncode(name) + "</div><div class='pl_tc_rcvd'><div class='pl_tc_rcvd_msg'>" + htmlEncode(message) + "</div></div>";
            }
            else {
                messageDiv = "<div class='pl_tc_sent_by'>" + htmlEncode(name) + "</div><div class='pl_tc_sent'><div class='pl_tc_sent_msg'>" + htmlEncode(message) + "</div></div>";
            }
            return messageDiv;
        }*/

        //20210306 RJ restructured addNewTextMessage into generate_msg_html
        function generate_msg_html(name, message, type) {

            var messageDiv = "";
            if (type == "received") {
                messageDiv = "<div class='pl_tc_rcvd_from'>" + htmlEncode(name) + "</div><div class='pl_tc_rcvd'><div class='pl_tc_rcvd_msg'>" + htmlEncode(message) + "</div></div>";
            }
            else {
                messageDiv = "<div class='pl_tc_sent_by'>" + htmlEncode(name) + "</div><div class='pl_tc_sent'><div class='pl_tc_sent_msg'>" + htmlEncode(message) + "</div></div>";
            }
            return messageDiv;
        }


        //ZH: 20180820 - Added
        function loadHistoryFrmContacts(theContactBpId) {
            //$('.chat-box').html("<span class=\"e-icon e-plus\"></span>Chat");
            $('.chat-box').html("<span class=\"e-icon e-minus\"></span>@PL_T("AV.TextChat.TextChat.Accordion.Chat.Title", "Chat")");

            $('#frndBpId').val('');
            $('#sendmessage').prop("disabled", true);
            $('#message').prop("disabled", true);

            $('.message-area').html("");
            //20210214 RJ enable chat option for offline contacts
            //loadHistory(theContactBpId, false);
            loadHistory(theContactBpId, true);
        }

        // EH 180817 load contact history
        function loadHistory(contactBpId, currentOnline) {
            //debugger;
            //console.log(contactBpId);
            var data = JSON.stringify({ "bp_id": contactBpId });

            //var data = JSON.stringify({ "path": $(this).attr("data-path"), "bp_id": $(this).attr("data-bp-id"), "pt_id": $(this).attr("data-pt-id"), "org_id": $(this).attr("data-org-id") });
            var tmp_url = "../../TextChat/GetHistoryContactList";
            //$("#content-loader-modal").modal('show')
            $("#accordion").ejAccordion("expandPanel", [1]);

            $('#message-area-loader').show();

            //$('#content-loader-modal').modal('show');
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: "post",
                cache: false,
                async: true,
                url: tmp_url,
                 data: data,
                 success: function (response) {
                     //$("#content-loader-modal").modal('hide')
                     $('#message-area-loader').hide();
                    // $('#content-loader-modal').modal('hide');
                    var Obj = JSON.parse(response);
                    console.log(Obj);
                    var txt = "";
                    for (var i = 0; i < Obj.length; i++) {
                        var contact = "";
                        //var contact = "<a href='' onclick='loadHistory(" + Obj[i].bp_id + ")'>" + Obj[i].bp_name + "</a>";
                        if (theBpId == Obj[i].bp_id) {
                            contact = generate_msg_html(Obj[i].username, Obj[i].message, 'sent');
                            txt += contact;
                        }
                        else {
                            contact = generate_msg_html(Obj[i].username, Obj[i].message, 'received');
                            txt += contact;
                        }


                    }
                    //ZH: 20180820 - Commented out contact hsitory html. Added message area prepend();
                     //$(".contact-history").html(txt);
                    $('.message-area').prepend(txt);

                    //EH 180817 expand contact history
                    //$("#accordion").ejAccordion("expandPanel", [2]);
                    scrollTBottom($('.message-area'));

                     //ZH: 20180820 - Adding the current message html portion in the localstorage for tab sharing
                    var last_frd = '';
                    if (currentOnline) {
                        last_frd = contactBpId + '';
                    }

                    var sharedObject = { 'lastFrnd': last_frd, 'last_history': $('.message-area').html() };

                    SJ.localStorage.setItem('PL_CHAT_' + theBpId, JSON.stringify(sharedObject));

                     //EH 180830 disable chat option for offline user

                 },
                error: function (xhr) {
                    // $("#content-loader-modal").modal('hide')
                    $('#message-area-loader').hide();

               }
            });

        }

        //20210221 RJ load group info with an ajax call
        function loadGroupInfo(g_org_id, g_pt_id) {

            data = JSON.stringify({ "org_id": g_org_id, "pt_id": g_pt_id });

             var tmp_url = "/TextChat/GetGroups";
            var info = [];
            $("#accordion").ejAccordion("expandPanel", [1]);

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: "post",
                cache: false,
                async: false,
                url: tmp_url,
                data: data,
                success: function (response) {

                    info = response;

                },
                error: function (xhr) {
                    alert("ajax calling failed");


               }
            });

            return info;
        }

        //20210405 RJ GroupAjax calls ajax for group save
        function GroupChatSaveDB(org_id, dc_id, msg, recipient_id, sender_id) {

            var data = JSON.stringify({ "org_id": org_id, "dc_id": dc_id, "msg": msg, "recipient_id": recipient_id, "sender_id": sender_id });
            var tmp_url = "/TextChat/GroupChatSave";
            var info = [];
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: "post",
                cache: false,
                async: false,
                url: tmp_url,
                data: data,
                success: function (response) {

                    info = response;

                },
                error: function (xhr) {
                    alert("ajax calling failed");


                }
            });
            console.log(info);
            return info;
        }


        //20210223 RJ returns the group names
        function getGroupNames(n_org_id, n_pt_id, grouplist) {

            if (typeof grouplist == 'undefined') {
                var obj = JSON.parse(loadGroupInfo(n_org_id, n_pt_id));
            }

            else {
               var obj = JSON.parse(grouplist);
            }

            var nameArr = [];

            //$(".onlineMenu").hide();
            var userDivs = document.createElement("table");
            //userDivs.id = "userOnline";
            userDivs.id = "GroupsTable";
            var userTableStyle = document.createAttribute("style");
            userTableStyle.value = "width : 100%";
            userDivs.setAttributeNode(userTableStyle);
            for (var i = 0; i < obj.length; i++) {
                // var userTableRow = document.createElement("tr");

                //MAR 20210405 adding dc id and dc class for groups
                //  var groupDcId = document.createAttribute("dc_id");
                // groupDcId.value = obj[i].dc_id;
                // userTableRow.setAttributeNode(groupDcId);

                //  var userTableData = document.createElement("td");
                nameArr.push(obj[i].dc_name);
                var userData = addNewUserElement("", "", obj[i].dc_id, obj[i].discussion_class, nameArr[i], "online");
               // userTableData.appendChild(userData);
               // userTableRow.appendChild(userTableData);
                userDivs.appendChild(userData);
            }

            var onlineUsersClass = document.getElementsByClassName("online-users");
            //Hide userList Table
            $("#userTable").hide();

            //Check if Groups Table already exists
            var groupsTable = document.getElementById("GroupsTable");
            //console.log(userDivs);
            if (groupsTable != null) {
                //If exists , Replace existing group table by userDivs
                $("#GroupsTable").replaceWith(userDivs);
            }
            else {
                //otherwise, appendChild the userDivs
                onlineUsersClass[0].appendChild(userDivs);
            }

        }



        //20210325 RJ added a temporary function for testing
        function temp_testing() {


          //  remove_msg_for_everyone(14686, 82783)
           // var temp_org_id = "@ViewBag.orgId";
           //     var temp_bp_id = "@ViewBag.BpId";
          //  var msg_data = JSON.parse(get_msg_data(1231, "PRIVATE_GROUP", temp_org_id, 15, null));
          //  console.log(msg_data);
            //var temp = JSON.parse(loadGroupInfo(temp_org_id, null));
           // console.log(temp);
           // console.log(temp[0].discussion_class);

            // var bp_ids = [temp_bp_id, 1, 2, 3, 4];
            // var role_codes = ["$CGOWNER", "$CGPART", "$CGPART", "$CGPART", "$CGPART"];
             //create_group(temp_org_id, 'rj factory ajax test2', "PUBLIC_GROUP", bp_ids, role_codes);

          // var dc_id = 14683;
           // var bp_ids = [11, 12, 13, 14];
           // var role_codes = ["$CGPART", "$CGPART", "$CGPART", "$CGPART"];


            //add_group_members(temp_org_id, dc_id, bp_ids, role_codes);

           // remove_group_memebers(temp_org_id, dc_id, bp_ids);

            // delete_group(temp_org_id, dc_id);
           // group_members_data(2, 14686);

        }


        //20210323 RJ Genarate group creating query
        function create_group(org_id, dc_name, dc_class, bp_ids, role_codes) {

            var members_query_string = '[';
            var final_query_string = '';

            for (var i = 0; i < bp_ids.length; i++) {
                members_query_string = members_query_string + '{"bp_id":"' + bp_ids[i] + '","role_code":"' + role_codes[i] + '"}';

                if (i < bp_ids.length - 1) {
                    members_query_string = members_query_string + ','
                }
                else {
                    members_query_string = members_query_string + ']'
                }
            }

            final_query_string = '{"org_id":"' + org_id + '","dc_name":"' + dc_name + '","discussion_class":"' + dc_class + '","members":' + members_query_string + '}';


            var check = GroupAjax(final_query_string, "CreateGroups");


        }



        //20210325 RJ adding members query

        function add_group_members(org_id, dc_id, bp_ids, role_codes) {

            var members_query_string = '[';


            for (var i = 0; i < bp_ids.length; i++) {
                members_query_string = members_query_string + '{"org_id":"' + org_id + '","dc_id":"' + dc_id + '","bp_id":"' + bp_ids[i] + '","role_code":"' + role_codes[i] + '"}';

                if (i < bp_ids.length - 1) {
                    members_query_string = members_query_string + ',';
                }
                else {
                    members_query_string = members_query_string + ']';
                }
            }

            var check = GroupAjax(members_query_string, "AddGroupMemebers");

        }


        //20210325 RJ members removing query
        function remove_group_memebers(org_id, dc_id, bp_ids) {

            var members_query_string = '[';
            var final_query_string = '';

            for (var i = 0; i < bp_ids.length; i++) {
                members_query_string = members_query_string + '{"bp_id":"' + bp_ids[i] + '"}';

                if (i < bp_ids.length - 1) {
                    members_query_string = members_query_string + ','
                }
                else {
                    members_query_string = members_query_string + ']'
                }
            }

            final_query_string = '{"org_id":"' + org_id + '","dc_id":"' + dc_id + '","members":' + members_query_string + '}';

            var check = GroupAjax(final_query_string, "RemoveGroupMemebers");

        }

        //20210511 RJ getting group members data
        function group_members_data(org_id, dc_id) {
            var final_query_string = '{"org_id":"' + org_id + '","dc_id":"' + dc_id + '"}';

            var check = GroupAjax(final_query_string, "GroupMemebersData");
            return check;
        }

        //20210518 RJ Updating group name
        function group_name_updata(org_id, dc_id, new_name) {
            var final_query_string = '{"org_id":"' + org_id + '","dc_id":"' + dc_id + '","dc_name":"' + new_name + '"}';

            var check = GroupAjax(final_query_string, "GroupNameUpdate");
            return check;
        }



        //20210329 RJ GroupAjax calls ajax for group functinality
        function GroupAjax(query, type) {

            var data = JSON.stringify({ "query": query });
            var tmp_url = "/TextChat/" + type;
            var info = [];
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: "post",
                cache: false,
                async: false,
                url: tmp_url,
                data: data,
                success: function (response) {

                    info = response;

                },
                error: function (xhr) {
                    alert("ajax calling failed");


                }
            });

            return info;
        }

    // 20210511 RJ checking admin privilage
        function Group_Admin_Privilege(dc_id) {

            var org_id = "@ViewBag.orgId";
            var data = JSON.parse(group_members_data(org_id, dc_id));

            for (var i in data.members) {

                if (theBpId == data.members[i].bp_id && data.members[i].role_code == '$CGADMIN') {
                    return 1;
                }
            }
            return 0;
        }

        // 20210511 RJ checking Owner privilage
        function Group_Owner_Privilege(dc_id) {

            var org_id = "@ViewBag.orgId";
            var data = JSON.parse(group_members_data(org_id, dc_id));

            for (var i in data.members) {

                if (theBpId == data.members[i].bp_id && data.members[i].role_code == '$CGOWNER') {
                    return 1;
                }
            }
            return 0;
        }

    // 20210511 RJ filtering members

    function NonMember_list(dc_id) {

        var org_id = "@ViewBag.orgId";
        var all_contact = AllUserList;
        var members_data =JSON.parse(group_members_data(org_id, dc_id));
        var member_list = [];
        var non_memebers_list =[];

        for (var i in members_data.members) {

            member_list.push(members_data.members[i].bp_id.toString());

        }


        for (var i in all_contact) {
            if (!(member_list.includes(all_contact[i].bpId))) {

                non_memebers_list.push(all_contact[i]);
            }
        }

        return non_memebers_list;

        }

        //20210426 RJ added single message removing functionality
        function remove_msg_for_you(dc_id, topic_id){

            var org_id = "@ViewBag.orgId";
            var user_bp_id=theBpId;
            RemoveMsgAjax(org_id, dc_id, topic_id, 0, user_bp_id);

        }

        function remove_msg_for_everyone(dc_id, topic_id){
            var org_id = "@ViewBag.orgId";
            var user_bp_id=theBpId;
            RemoveMsgAjax(org_id, dc_id, topic_id, 1, user_bp_id)
        }

        function RemoveMsgAjax(org_id, dc_id, topic_id, type, user_bp_id) {

            var data = JSON.stringify({ "org_id": org_id, "dc_id": dc_id, "topic_id": topic_id, "type": type, "user_bp_id": user_bp_id });
            var tmp_url = "/TextChat/SingleMsgRemove";
            var info = [];
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: "post",
                cache: false,
                async: false,
                url: tmp_url,
                data: data,
                success: function (response) {

                    info = response;

                },
                error: function (xhr) {
                    alert("ajax calling failed");


                }
            });

            return info;
        }





        //ZH: 20180831 - Added
        function textChatPaneShown() {
            $("#accordion").ejAccordion("expandPanel", [0, 1]);

            //TODO: Need to refactor the chat proxy instance. One global single object for the proxy
            var tempChatProxy = SJ.iwc.SignalR.getHubProxy('chatHub', { client: {} });
            tempChatProxy.server.seenUnread();
            tempChatProxy = null;
        }

        //EH 190318 toggle last online offline user chat with
        function toggle_onnline_offline_user(user_online, user_offline) {
            if (user_online == '') {
                //20210219 RJ WY seting frndBpId value to user_offline
                // $('#frndBpId').val('');
                $('#frndBpId').val(user_offline);
                $('#offline_contact_to').val(user_offline);

            }
            else if (user_offline == '') {
                $('#frndBpId').val(user_online);
                $('#offline_contact_to').val('');
            }

        }

        function showmsgnotification(senderBpId) {
            debugger;
            var temp_msg_count = 0;
            //temp_msg_count = $('.user[bp_id="' + senderBpId + '"] span[data-contact-bp-id="' + senderBpId + '"]').attr('data-pending-msg');
            temp_msg_count = $('#' + senderBpId).attr('data-pending-msg');

            temp_msg_count = parseInt(temp_msg_count) + 1;
            $('#' + senderBpId).attr('data-pending-msg', temp_msg_count);
            //$('#' + senderBpId).text(temp_msg_count);

            //EH 190321
            var imgElem = $('.online-icon').find('img');
            if ($('.right-pane').hasClass('hidden')) {

                imgElem.attr('src', '/Content/images/chat-online-flash.gif');
            }
            else {
                imgElem.attr('src', '/Content/images/chat-online.png');
            }
        }
</script>
@*}*@

<style>
    .container {
        /*margin-top: 20px;*/
    }

    .chatViewContainer {
        margin-top: 20px;
        margin-left: 15px;
        margin-right: 15px;
    }

    .user-list-container {
        /*width: 25%;*/
        /*float: left;*/
        border: 1px solid;
        background-color: white;
        height: 35vh;
        max-height: 35vh;
    }

    .online-users-header {
        font-size: 17px;
        /*font-weight: bold;*/
        text-align: center;
        background-color: lightgray;
        /*height: 35px;*/
        margin-bottom: 10px;
    }

    .online-users {
        /*padding-left: 20px;
            padding-right: 5px;*/
        height: auto;
        /*width: 100%;*/
        overflow-y: scroll;
        /*-----------------*/
        background-color: white;
        height: auto;
        max-height: 35vh;
    }

    .user {
        color: green;
        font-size: 13px;
        /*font-weight: bold;*/
        cursor: pointer;
        /*margin-bottom: 5px;*/
    }

        .user:hover {
            /*background-color: skyblue;*/
        }

    .text-chat-container, .video-chat-container {
        width: 65%;
        float: left;
        margin-left: 30px;
        border: 1px solid;
        height: 80vh;
        display: none;
    }

    .chat-close-control {
        width: 5%;
        float: right;
        /*display: none;*/
        margin-right: 52px;
        margin-top: 5px;
    }

    .message-area-header {
        padding-top: 3px;
        padding-left: 10px;
        height: 6%;
        background-color: lightgrey;
        font-size: 15px;
        font-weight: bold;
    }

    .message-area {
        background-color: white;
        height: auto;
        /*height: 50vh;*/
        min-height: 45vh;
        max-height: 50vh;
        padding-top: 10px;
        border: 3px solid #d1d1d1; /*MRR 180820 border color changed */
        overflow-y: scroll;
    }

    .text-chat-controls {
        padding: 8px; /*MRR 180820 padding added around the controls instead of panel */
        /*width: 100%;*/
        background-color: lightgray;
        height: 10%;
        /*text-align: center;*/
    }

    #message {
        width: 70%;
        height: 35px;
    }

    .text-message {
        padding-left: 5px !important;
        /*margin-bottom: 5px;*/
        line-height: 18px !important;
    }

    .chatbutton {
        float: right;
        /*display: none;*/
    }
    /* MRR 180820 padding reduced + filled content*/
    .message-container {
        padding: 0 !important;
    }

    /*.chatbutton*/ .videobtn {
        margin-right: 5px;
    }

    .chatbutton /*.textbtn*/ {
        margin-right: 10px;
    }

    /* EH  180828 online and con user style*/
    .online {
        max-height: 20px;
        color: #32CD32;
    }

    .contact-online {
        max-height: 20px;
        color: #32CD32;
    }

    .contact-offline {
        max-height: 20px;
        color: #696969;
    }

    .onlineMenuItem {
        color: #0000FF !important;
    }

    span.badge {
        padding: 3px 5px;
        max-height: 18px;
        font-size: 10px;
        margin-left: 4px;
        background-color: #fff200;
        color: #333;
    }

    .pl_tc_sent_by, .pl_tc_rcvd_from {
        clear: both;
        font-weight: bold;
    }

    .pl_tc_sent_by {
        text-align: left;
    }

    .pl_tc_rcvd_from {
        text-align: right;
    }

    .pl_tc_sent_msg {
        clear: both;
        float: left;
        text-align: left;
        border-radius: 1em;
        padding: 0.25em 0.75em;
        margin: 0.0625em;
        max-width: 70%;
        align-self: flex-start;
        background-color: cornflowerblue;
        color: #fff;
        border-top-left-radius: 0.1em;
    }

    .pl_tc_rcvd_msg {
        clear: both;
        float: right;
        text-align: right;
        border-radius: 1em;
        padding: 0.25em 0.75em;
        margin: 0.0625em;
        max-width: 70%;
        align-self: flex-end;
        background-color: #efefef;
        border-top-right-radius: 0.1em;
    }
    /* 20210221 RJ user-group added */
    .user-group {
        max-height: 20px;
        color: green;
    }

    table, th, td {
        border: 0px solid black;
        padding: 5px;
        width: 100%;
        overflow: inherit
    }

    table {
        border-spacing: 15px;
        overflow: inherit
    }

    .dropdown-menu{
        left:0
    }
      
    .nonMemberButtondiv{
        display : flex;
        justify-content : flex-end;
        align-items: flex-end;
        border-top : solid 1px black;
        padding : 5px 10px;
        padding-bottom : 0px;
        margin-top : 10px;
    }
  
</style>